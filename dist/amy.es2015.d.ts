// Generated by dts-bundle v0.7.2
// Dependencies for this module:
//   ../../wonder-commonlib/dist/commonjs/Collection
//   ../../wonder-commonlib/dist/es2015/Collection

declare module 'amy.js/dist/es2015' {
    export { Camera } from "amy.js/dist/es2015/Component/Camera/Camera";
    export { CameraController } from "amy.js/dist/es2015/Component/Camera/Controll/CameraController";
    export { PerspectiveCamera } from "amy.js/dist/es2015/Component/Camera/PerspectiveCamera";
    export { BoxGeometry } from "amy.js/dist/es2015/Component/Geometry/BoxGeometry";
    export { BufferContainer } from "amy.js/dist/es2015/Component/Geometry/BufferContainer/BufferContainer";
    export { EBufferDataType } from "amy.js/dist/es2015/Component/Geometry/BufferContainer/EBufferDataType";
    export { GeometryData } from "amy.js/dist/es2015/Component/Geometry/Data/GeometryData";
    export { Geometry } from "amy.js/dist/es2015/Component/Geometry/Geometry";
    export { ModelGeometry } from "amy.js/dist/es2015/Component/Geometry/ModelGeometry";
    export { PlaneGeometry } from "amy.js/dist/es2015/Component/Geometry/PlaneGeometry";
    export { TriangleGeometry } from "amy.js/dist/es2015/Component/Geometry/TriangleGeometry";
    export { BasicMaterial } from "amy.js/dist/es2015/Component/Material/BasicMaterial";
    export { Material } from "amy.js/dist/es2015/Component/Material/Material";
    export { ModelMaterial } from "amy.js/dist/es2015/Component/Material/ModelMaterial";
    export { ArrayBuffer } from "amy.js/dist/es2015/Component/Render/Buffer/ArrayBuffer";
    export { Buffer } from "amy.js/dist/es2015/Component/Render/Buffer/Buffer";
    export { EBufferType } from "amy.js/dist/es2015/Component/Render/Buffer/EBufferType";
    export { EBufferUseage } from "amy.js/dist/es2015/Component/Render/Buffer/EBufferUseage";
    export { ElementBuffer } from "amy.js/dist/es2015/Component/Render/Buffer/ElementBuffer";
    export { MeshRenderer } from "amy.js/dist/es2015/Component/Render/MeshRender/MeshRenderer";
    export { RendererComponent } from "amy.js/dist/es2015/Component/Render/MeshRender/RendererComponent";
    export { EVariableType } from "amy.js/dist/es2015/Component/Render/Program/EVariableType";
    export { GLSLDataSender } from "amy.js/dist/es2015/Component/Render/Program/GLSLDataSender";
    export { Program } from "amy.js/dist/es2015/Component/Render/Program/Program";
    export { BasicShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/BasicShaderLib";
    export { ModelShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/ModelShaderLib";
    export { ShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/ShaderLib";
    export { BasicShader } from "amy.js/dist/es2015/Component/Render/Shader/shader/BasicShader";
    export { ModelShader } from "amy.js/dist/es2015/Component/Render/Shader/shader/ModelShader";
    export { Shader } from "amy.js/dist/es2015/Component/Render/Shader/shader/Shader";
    export { VariableLib } from "amy.js/dist/es2015/Component/Render/Shader/VariableLib";
    export { ThreeDTransform } from "amy.js/dist/es2015/Component/Transform/ThreeDTransform";
    export { Transform } from "amy.js/dist/es2015/Component/Transform/Transform";
    export { Component } from "amy.js/dist/es2015/core/Component";
    export { Device } from "amy.js/dist/es2015/core/device/Device";
    export { EScreenSize } from "amy.js/dist/es2015/core/device/EScreenSize";
    export { View } from "amy.js/dist/es2015/core/device/view/View";
    export { Director } from "amy.js/dist/es2015/core/Director";
    export { Entity } from "amy.js/dist/es2015/core/Entity/Entity";
    export { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    export { GameObject } from "amy.js/dist/es2015/core/Entity/GameObject";
    export { ComponentManager } from "amy.js/dist/es2015/core/Entity/Manager/ComponentManager";
    export { EntityManager } from "amy.js/dist/es2015/core/Entity/Manager/EntityManager";
    export { Main } from "amy.js/dist/es2015/core/Main";
    export { EDrawMode } from "amy.js/dist/es2015/core/renderer/command/EDrawMode";
    export { RenderCommand } from "amy.js/dist/es2015/core/renderer/command/RenderCommand";
    export { Renderer } from "amy.js/dist/es2015/core/renderer/render/Renderer";
    export { WebglRenderer } from "amy.js/dist/es2015/core/renderer/render/WebglRenderer";
    export { WebglState } from "amy.js/dist/es2015/core/renderer/state/WebglState";
    export { GameObjectScene } from "amy.js/dist/es2015/core/Scene/GameObjectScene";
    export { Scene } from "amy.js/dist/es2015/core/Scene/Scene";
    export { Color } from "amy.js/dist/es2015/Math/Color";
    export { Matrix4 } from "amy.js/dist/es2015/Math/Matrix4";
    export { Vector } from "amy.js/dist/es2015/Math/Vector";
    export { Vector3 } from "amy.js/dist/es2015/Math/Vector3";
    export { Vector4 } from "amy.js/dist/es2015/Math/Vector4";
    export { Loader } from "amy.js/dist/es2015/until/Loader";
    export { MaterialLoader, MaterialModel } from "amy.js/dist/es2015/until/MaterialLoader";
    export { ObjLoader, ObjectModel } from "amy.js/dist/es2015/until/ObjLoader";
    export { singleton } from "amy.js/dist/es2015/until/singleton";
    export { Test } from "amy.js/dist/es2015/until/Test";
    export { Util } from "amy.js/dist/es2015/until/Util";
}

declare module 'amy.js/dist/es2015/Component/Camera/Camera' {
    import { Matrix4 } from "amy.js/dist/es2015/Math/Matrix4";
    import { GameObject } from "amy.js/dist/es2015/core/Entity/GameObject";
    import { Vector } from "amy.js/dist/es2015/Math/Vector";
    export abstract class Camera {
        near: number;
        far: number;
        pMatrix: Matrix4;
        readonly vMatrix: Matrix4;
        view: Vector;
        translate(x: number, y: number, z: any): void;
        entityObject: GameObject;
        init(): void;
        abstract updateProjectionMatrix(): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Camera/Controll/CameraController' {
    import { Camera } from "amy.js/dist/es2015/Component/Camera/Camera";
    import { Matrix4 } from "amy.js/dist/es2015/Math/Matrix4";
    import { Component } from "amy.js/dist/es2015/core/Component";
    export class CameraController extends Component {
        static create(camera: Camera): CameraController;
        pMatrix: Matrix4;
        readonly vMatrix: Matrix4;
        camera: Camera;
        init(): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Camera/PerspectiveCamera' {
    import { Camera } from "amy.js/dist/es2015/Component/Camera/Camera";
    export class PerspectiveCamera extends Camera {
        static create(): PerspectiveCamera;
        fovy: number;
        aspect: number;
        updateProjectionMatrix(): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/BoxGeometry' {
    import { Geometry, GeometryDataType } from "amy.js/dist/es2015/Component/Geometry/Geometry";
    export class BoxGeometry extends Geometry {
        static create(): BoxGeometry;
        computeData(): GeometryDataType;
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/BufferContainer/BufferContainer' {
    import { EBufferDataType } from "amy.js/dist/es2015/Component/Geometry/BufferContainer/EBufferDataType";
    import { GeometryData } from "amy.js/dist/es2015/Component/Geometry/Data/GeometryData";
    import { Buffer } from "amy.js/dist/es2015/Component/Render/Buffer/Buffer";
    export class BufferContainer {
        static create(): BufferContainer;
        constructor();
        geometryData: GeometryData;
        init(): void;
        addChild(bufferName: any, buffer: Buffer): void;
        hasChild(bufferName: any): boolean;
        getChildren(): {
            [s: string]: Buffer;
        };
        getChild(type: EBufferDataType): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/BufferContainer/EBufferDataType' {
    export enum EBufferDataType {
        VERTICE,
        INDICE,
        NORMAL,
        TEXCOORD,
        COLOR,
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/Data/GeometryData' {
    export class GeometryData {
        static create(): GeometryData;
        vertice: number[];
        color: number[];
        indice: number[];
        normal: number[];
        texCoord: number[];
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/Geometry' {
    import { Component } from "amy.js/dist/es2015/core/Component";
    import { GeometryData } from "amy.js/dist/es2015/Component/Geometry/Data/GeometryData";
    import { BufferContainer } from "amy.js/dist/es2015/Component/Geometry/BufferContainer/BufferContainer";
    import { Material } from "amy.js/dist/es2015/Component/Material/Material";
    export type GeometryDataType = {
        vertice: number[];
        color?: number[];
        texCoord?: number[];
        normal?: number[];
        indice?: number[];
    };
    export abstract class Geometry extends Component {
        readonly geometryData: GeometryData;
        bufferContainer: BufferContainer;
        material: Material;
        init(): void;
        protected abstract computeData(): GeometryDataType;
        protected createGeometryData(computeData: GeometryDataType): GeometryData;
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/ModelGeometry' {
    import { Geometry } from "amy.js/dist/es2015/Component/Geometry/Geometry";
    export class ModelGeometry extends Geometry {
        static create(): ModelGeometry;
        indices: number[];
        vertices: number[];
        normals: number[];
        texCoords: number[];
        colors: number[];
        computeData(): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/PlaneGeometry' {
    import { Geometry, GeometryDataType } from "amy.js/dist/es2015/Component/Geometry/Geometry";
    export class PlaneGeometry extends Geometry {
        static create(): PlaneGeometry;
        computeData(): GeometryDataType;
    }
}

declare module 'amy.js/dist/es2015/Component/Geometry/TriangleGeometry' {
    import { Geometry, GeometryDataType } from "amy.js/dist/es2015/Component/Geometry/Geometry";
    export class TriangleGeometry extends Geometry {
        static create(): TriangleGeometry;
        width: number;
        height: number;
        computeData(): GeometryDataType;
    }
}

declare module 'amy.js/dist/es2015/Component/Material/BasicMaterial' {
    import { Material } from "amy.js/dist/es2015/Component/Material/Material";
    import { BasicShader } from "amy.js/dist/es2015/Component/Render/Shader/shader/BasicShader";
    export class BasicMaterial extends Material {
        static create(): BasicMaterial;
        getShader(): BasicShader;
    }
}

declare module 'amy.js/dist/es2015/Component/Material/Material' {
    import { RenderCommand } from "amy.js/dist/es2015/core/renderer/command/RenderCommand";
    import { Program } from "amy.js/dist/es2015/Component/Render/Program/Program";
    import { Color } from "amy.js/dist/es2015/Math/Color";
    export abstract class Material {
        readonly program: Program;
        color: Color;
        opacity: number;
        initWhenCreate(): void;
        init(): void;
        update(cmd: RenderCommand): void;
        protected abstract getShader(): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Material/ModelMaterial' {
    import { Material } from "amy.js/dist/es2015/Component/Material/Material";
    import { ModelShader } from "amy.js/dist/es2015/Component/Render/Shader/shader/ModelShader";
    export class ModelMaterial extends Material {
        static create(): ModelMaterial;
        getShader(): ModelShader;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Buffer/ArrayBuffer' {
    import { Buffer } from "amy.js/dist/es2015/Component/Render/Buffer/Buffer";
    import { EBufferType } from "amy.js/dist/es2015/Component/Render/Buffer/EBufferType";
    import { EBufferUseage } from "amy.js/dist/es2015/Component/Render/Buffer/EBufferUseage";
    export class ArrayBuffer extends Buffer {
        static create(data: number[], size: number, type?: EBufferType, usage?: EBufferUseage): ArrayBuffer;
        size: number;
        data: Float32Array;
        type: EBufferType;
        usage: EBufferUseage;
        count: number;
        initWhenCreate(data: number[], size: number, type?: EBufferType, usage?: EBufferUseage): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Buffer/Buffer' {
    export abstract class Buffer {
        buffer: any;
        dispose(): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Buffer/EBufferType' {
    export enum EBufferType {
        BYTE,
        UNSIGNED_BYTE,
        SHORT,
        UNSIGNED_SHORT,
        INT,
        UNSIGNED_INT,
        FLOAT,
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Buffer/EBufferUseage' {
    export enum EBufferUseage {
        STREAM_DRAW,
        STATIC_DRAW,
        DYNAMIC_DRAW,
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Buffer/ElementBuffer' {
    import { Buffer } from "amy.js/dist/es2015/Component/Render/Buffer/Buffer";
    import { EBufferType } from "amy.js/dist/es2015/Component/Render/Buffer/EBufferType";
    import { EBufferUseage } from "amy.js/dist/es2015/Component/Render/Buffer/EBufferUseage";
    export class ElementBuffer extends Buffer {
        static create(data: number[], type?: EBufferType, useage?: EBufferUseage): ElementBuffer;
        type: EBufferType;
        count: number;
        usage: EBufferUseage;
        data: Uint8Array | Uint16Array;
        initWhenCreate(data: number[], type: EBufferType, useage: EBufferUseage): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/MeshRender/MeshRenderer' {
    import { RendererComponent } from "amy.js/dist/es2015/Component/Render/MeshRender/RendererComponent";
    import { Renderer } from "amy.js/dist/es2015/core/renderer/render/Renderer";
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { GameObject } from "amy.js/dist/es2015/core/Entity/GameObject";
    export class MeshRenderer extends RendererComponent {
        static create(): MeshRenderer;
        render(renderer: Renderer, targetObject: EntityObject, camera: GameObject): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/MeshRender/RendererComponent' {
    import { Component } from "amy.js/dist/es2015/core/Component";
    import { Renderer } from "amy.js/dist/es2015/core/renderer/render/Renderer";
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { GameObject } from "amy.js/dist/es2015/core/Entity/GameObject";
    export abstract class RendererComponent extends Component {
        abstract render(renderer: Renderer, targetObject: EntityObject, camera: GameObject): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Program/EVariableType' {
    export enum EVariableType {
        FLOAT_1,
        FLOAT_2,
        FLOAT_3,
        FLOAT_4,
        VECTOR_2,
        VECTOR_3,
        VECTOR_4,
        COLOR_3,
        FLOAT_MAT3,
        FLOAT_MAT4,
        BUFFER,
        SAMPLER_CUBE,
        SAMPLER_2D,
        NUMBER_1,
        STRUCTURE,
        STRUCTURES,
        SAMPLER_ARRAY,
        FLOAT_MAT4_ARRAY,
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Program/GLSLDataSender' {
    import { Program } from "amy.js/dist/es2015/Component/Render/Program/Program";
    import { ArrayBuffer } from "amy.js/dist/es2015/Component/Render/Buffer/ArrayBuffer";
    import { Matrix4 } from "amy.js/dist/es2015/Math/Matrix4";
    export class GLSLDataSender {
        static create(program: Program): GLSLDataSender;
        constructor(_program: Program);
        addBufferToSendList(pos: number, buffer: ArrayBuffer): void;
        sendAllBufferData(): void;
        sendBuffer(pos: number, buffer: ArrayBuffer): void;
        sendFloat1(name: string, data: any): void;
        sendFloat2(name: string, data: any): void;
        sendFloat3(name: string, data: any): void;
        sendFloat4(name: string, data: any): void;
        sendVector2(name: string, data: any): void;
        sendVector3(name: string, data: any): void;
        sendVector4(name: string, data: any): void;
        sendNum1(name: string, data: number): void;
        sendMatrix4(name: string, data: Matrix4): void;
        sendMatrix4Array(name: string, data: any): void;
        getUniformLocation(name: string): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Program/Program' {
    import { Shader } from "amy.js/dist/es2015/Component/Render/Shader/shader/Shader";
    import { EVariableType } from "amy.js/dist/es2015/Component/Render/Program/EVariableType";
    import { ArrayBuffer } from "amy.js/dist/es2015/Component/Render/Buffer/ArrayBuffer";
    import { Entity } from "amy.js/dist/es2015/core/Entity/Entity";
    export class Program extends Entity {
        static create(): Program;
        glProgram: any;
        use(): void;
        getAttribLocation(name: string): number;
        getUniformLocation(name: string): any;
        sendAttributeBuffer(name: string, buffer: ArrayBuffer): void;
        sendAllBufferData(): void;
        sendUniformData(name: string, type: EVariableType, data: any): void;
        sendFloat1(name: string, data: any): void;
        sendFloat2(name: string, data: any): void;
        sendFloat3(name: string, data: any): void;
        sendFloat4(name: string, data: any): void;
        sendVector2(name: string, data: any): void;
        sendVector3(name: string, data: any): void;
        sendVector4(name: string, data: any): void;
        sendNum1(name: string, data: any): void;
        sendMatrix4(name: string, data: any): void;
        sendMatrix4Array(name: string, data: Float32Array): void;
        initProgramWithShader(shader: Shader): WebGLProgram;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Shader/lib/BasicShaderLib' {
    import { ShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/ShaderLib";
    export class BasicShaderLib extends ShaderLib {
        static create(): BasicShaderLib;
        VSource: string;
        FSource: string;
        init(): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Shader/lib/ModelShaderLib' {
    import { ShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/ShaderLib";
    export class ModelShaderLib extends ShaderLib {
        static create(): ModelShaderLib;
        VSource: string;
        FSource: string;
        init(): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Shader/lib/ShaderLib' {
    export abstract class ShaderLib {
        VSource: string;
        FSource: string;
        protected _attributes: string[];
        protected _uniforms: string[];
        abstract init(): any;
        getAttributes(): string[];
        getUniforms(): string[];
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Shader/shader/BasicShader' {
    import { Shader } from "amy.js/dist/es2015/Component/Render/Shader/shader/Shader";
    import { RenderCommand } from "amy.js/dist/es2015/core/renderer/command/RenderCommand";
    import { Material } from "amy.js/dist/es2015/Component/Material/Material";
    import { BasicShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/BasicShaderLib";
    export class BasicShader extends Shader {
        static create(): BasicShader;
        initProgram(): void;
        createShaderLib(): BasicShaderLib;
        update(cmd: RenderCommand, material: Material): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Shader/shader/ModelShader' {
    import { Shader } from "amy.js/dist/es2015/Component/Render/Shader/shader/Shader";
    import { ModelShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/ModelShaderLib";
    import { RenderCommand } from "amy.js/dist/es2015/core/renderer/command/RenderCommand";
    import { Material } from "amy.js/dist/es2015/Component/Material/Material";
    export class ModelShader extends Shader {
        static create(): ModelShader;
        initProgram(): void;
        createShaderLib(): ModelShaderLib;
        update(cmd: RenderCommand, material: Material): void;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Shader/shader/Shader' {
    import { Program } from "amy.js/dist/es2015/Component/Render/Program/Program";
    import { RenderCommand } from "amy.js/dist/es2015/core/renderer/command/RenderCommand";
    import { Component } from "amy.js/dist/es2015/core/Component";
    import { Material } from "amy.js/dist/es2015/Component/Material/Material";
    import { ShaderLib } from "amy.js/dist/es2015/Component/Render/Shader/lib/ShaderLib";
    export abstract class Shader extends Component {
        readonly VSource: string;
        readonly FSource: string;
        program: Program;
        protected _shaderLib: ShaderLib;
        init(): void;
        protected sendAttributeBuffer(name: string, data: any): void;
        protected sendUniformData(name: string, data: any): void;
        abstract initProgram(): any;
        abstract createShaderLib(): any;
        abstract update(cmd: RenderCommand, material: Material): any;
    }
}

declare module 'amy.js/dist/es2015/Component/Render/Shader/VariableLib' {
    import { EVariableType } from "amy.js/dist/es2015/Component/Render/Program/EVariableType";
    import { EBufferDataType } from "amy.js/dist/es2015/Component/Geometry/BufferContainer/EBufferDataType";
    export class VariableLib {
        static a_position: {
            type: EVariableType;
            buffer: EBufferDataType;
        };
        static a_color: {
            type: EVariableType;
            buffer: EBufferDataType;
        };
        static a_normal: {
            type: EVariableType;
            buffer: EBufferDataType;
        };
        static u_color: {
            type: EVariableType;
            buffer: string;
        };
        static u_a: {
            type: EVariableType;
            buffer: string;
        };
        static u_mMatrix: {
            type: EVariableType;
            buffer: string;
        };
        static u_vMatrix: {
            type: EVariableType;
            buffer: string;
        };
        static u_pMatrix: {
            type: EVariableType;
            buffer: string;
        };
        static u_mvpMatrix: {
            type: EVariableType;
        };
    }
}

declare module 'amy.js/dist/es2015/Component/Transform/ThreeDTransform' {
    import { Transform } from "amy.js/dist/es2015/Component/Transform/Transform";
    export class ThreeDTransform extends Transform {
    }
}

declare module 'amy.js/dist/es2015/Component/Transform/Transform' {
    import { Component } from "amy.js/dist/es2015/core/Component";
    import { Matrix4 } from "amy.js/dist/es2015/Math/Matrix4";
    export class Transform extends Component {
        static create(): Transform;
        mMatrix: Matrix4;
        rotate(angle: number, x: number, y: number, z: number): void;
        scale(x: number, y: number, z: number): void;
        translate(x: number, y: number, z: number): void;
    }
}

declare module 'amy.js/dist/es2015/core/Component' {
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { Entity } from "amy.js/dist/es2015/core/Entity/Entity";
    import { Transform } from "amy.js/dist/es2015/Component/Transform/Transform";
    export class Component extends Entity {
        readonly transform: Transform;
        entityObject: EntityObject;
        init(): void;
        addToObject(entityObject: EntityObject): void;
        addToComponentContainer(): void;
    }
}

declare module 'amy.js/dist/es2015/core/device/Device' {
    import { IView } from "amy.js/dist/es2015/core/device/view/IView";
    import { ContextConfigData } from "amy.js/dist/es2015/core/ContextConfig";
    export class Device {
        static getInstance(): any;
        gl: WebGLRenderingContext;
        canvas: HTMLCanvasElement;
        view: IView;
        createGL(canvasId: string, contextConfigData: ContextConfigData, parentId: string): void;
        setScreen(): void;
    }
}

declare module 'amy.js/dist/es2015/core/device/EScreenSize' {
    export enum EScreenSize {
        FULL = 0,
    }
}

declare module 'amy.js/dist/es2015/core/device/view/View' {
    import { IView } from "amy.js/dist/es2015/core/device/view/IView";
    import { ContextConfigData } from "amy.js/dist/es2015/core/ContextConfig";
    export class View implements IView {
        static create(view: any): View;
        constructor(_dom: any);
        readonly offset: {
            x: any;
            y: any;
        };
        readonly dom: any;
        x: number;
        y: number;
        width: number;
        height: number;
        styleWidth: string;
        styleHeight: string;
        getContext(contextConfig: ContextConfigData): WebGLRenderingContext;
        initCanvas(): void;
    }
}

declare module 'amy.js/dist/es2015/core/Director' {
    import { Renderer } from "amy.js/dist/es2015/core/renderer/render/Renderer";
    import { Scene } from "amy.js/dist/es2015/core/Scene/Scene";
    export class Director {
        static getInstance(): any;
        renderer: Renderer;
        scene: Scene;
        initWhenCreate(): void;
        init(): void;
        Render(): void;
        start(): void;
    }
}

declare module 'amy.js/dist/es2015/core/Entity/Entity' {
    export abstract class Entity {
        constructor();
        uid: number;
    }
}

declare module 'amy.js/dist/es2015/core/Entity/EntityObject' {
    import { Entity } from "amy.js/dist/es2015/core/Entity/Entity";
    import { EntityManager } from "amy.js/dist/es2015/core/Entity/Manager/EntityManager";
    import { Collection } from "wonder-commonlib/dist/commonjs/Collection";
    import { Component } from "amy.js/dist/es2015/core/Component";
    import { ComponentManager } from "amy.js/dist/es2015/core/Entity/Manager/ComponentManager";
    import { Renderer } from "amy.js/dist/es2015/core/renderer/render/Renderer";
    import { Geometry } from "amy.js/dist/es2015/Component/Geometry/Geometry";
    import { Transform } from "amy.js/dist/es2015/Component/Transform/Transform";
    import { GameObject } from "amy.js/dist/es2015/core/Entity/GameObject";
    export abstract class EntityObject extends Entity {
        readonly transform: Transform;
        readonly geometry: Geometry;
        parent: EntityObject;
        name: string;
        protected _entityManager: EntityManager;
        protected _componentManager: ComponentManager;
        initWhenCreate(): void;
        init(): this;
        render(renderer: Renderer, camera: GameObject): void;
        protected abstract createTransform(): any;
        dispose(): this;
        hasChild(child: EntityObject): boolean;
        addChild(child: EntityObject): this;
        addChildren(children: EntityObject): any;
        addChildren(children: Array<EntityObject>): any;
        addChildren(children: Collection<EntityObject>): any;
        forEach(func: (child: EntityObject, index: number) => void): this;
        filter(func: (child: EntityObject, index: number) => boolean): Collection<EntityObject>;
        getChildren(): Collection<any>;
        getAllChildren(): Collection<EntityObject>;
        getChild(index: number): any;
        findChildById(uid: number): any;
        findChildByName(name: string): any;
        findChildrenByName(name: string): Collection<EntityObject>;
        removeChild(child: EntityObject): EntityManager;
        removeAllChildren(): void;
        addComponent(component: Component): void;
        getComponent<T>(componentClass: any): T;
        hasComponent<T>(componentClass: any): boolean;
        removeComponent(component: Component): void;
        removeAllComponent(): void;
    }
}

declare module 'amy.js/dist/es2015/core/Entity/GameObject' {
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { Transform } from "amy.js/dist/es2015/Component/Transform/Transform";
    export class GameObject extends EntityObject {
        static create(): GameObject;
        initWhenCreate(): void;
        createTransform(): Transform;
    }
}

declare module 'amy.js/dist/es2015/core/Entity/Manager/ComponentManager' {
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { Geometry } from "amy.js/dist/es2015/Component/Geometry/Geometry";
    import { Component } from "amy.js/dist/es2015/core/Component";
    import { Transform } from "amy.js/dist/es2015/Component/Transform/Transform";
    import { MeshRenderer } from "amy.js/dist/es2015/Component/Render/MeshRender/MeshRenderer";
    export class ComponentManager {
        static create(entityObject: EntityObject): ComponentManager;
        constructor(_entityObject: EntityObject);
        transform: Transform;
        geometry: Geometry;
        init(): void;
        addComponent(component: Component): void;
        getComponent<T>(componentClass: any): T;
        hasComponent<T>(componentClass: any): boolean;
        removeComponent(component: Component): void;
        getRenderComponent(): MeshRenderer;
        removeAllComponent(): void;
    }
}

declare module 'amy.js/dist/es2015/core/Entity/Manager/EntityManager' {
    import { Collection } from "wonder-commonlib/dist/commonjs/Collection";
    import { Entity } from "amy.js/dist/es2015/core/Entity/Entity";
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    export class EntityManager extends Entity {
        static create(entityDispatcher: EntityObject): EntityManager;
        constructor(_entityDispatcher: EntityObject);
        init(): void;
        dispose(): void;
        hasChild(child: EntityObject): boolean;
        addChild(child: EntityObject): this;
        addChildren(children: EntityObject): any;
        addChildren(children: Array<EntityObject>): any;
        addChildren(children: Collection<EntityObject>): any;
        forEach(func: (child: EntityObject, index: number) => void): this;
        filter(func: (child: EntityObject, index: number) => boolean): Collection<EntityObject>;
        getChildren(): Collection<any>;
        getAllChildren(): Collection<EntityObject>;
        getChild(index: number): any;
        findChildById(uid: number): any;
        findChildByName(name: string): any;
        findChildrenByName(name: string): Collection<EntityObject>;
        removeChild(child: EntityObject): this;
        removeAllChildren(): void;
    }
}

declare module 'amy.js/dist/es2015/core/Main' {
    export class Main {
        static setCanvas(canvasId?: string, parentId?: string): typeof Main;
        static init(): typeof Main;
    }
}

declare module 'amy.js/dist/es2015/core/renderer/command/EDrawMode' {
    export enum EDrawMode {
        POINTS,
        LINES,
        LINE_LOOP,
        LINE_STRIP,
        TRIANGLES,
        TRIANGLE_STRIP,
        TRIANGLE_FAN,
    }
}

declare module 'amy.js/dist/es2015/core/renderer/command/RenderCommand' {
    import { BufferContainer } from "amy.js/dist/es2015/Component/Geometry/BufferContainer/BufferContainer";
    import { Matrix4 } from "amy.js/dist/es2015/Math/Matrix4";
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { Material } from "amy.js/dist/es2015/Component/Material/Material";
    export class RenderCommand {
        static create(): RenderCommand;
        readonly color: number[];
        readonly opacity: number;
        buffers: BufferContainer;
        mMatrix: Matrix4;
        vMatrix: Matrix4;
        pMatrix: Matrix4;
        targetObject: EntityObject;
        material: Material;
        draw(): void;
    }
}

declare module 'amy.js/dist/es2015/core/renderer/render/Renderer' {
    import { RenderCommand } from "amy.js/dist/es2015/core/renderer/command/RenderCommand";
    import { WebglState } from "amy.js/dist/es2015/core/renderer/state/WebglState";
    export abstract class Renderer {
        webglState: WebglState;
        setClearColor(r: number, g: number, b: number, a: number): void;
        abstract render(): any;
        abstract addCommand(renderCmd: RenderCommand): any;
        abstract init(): any;
    }
}

declare module 'amy.js/dist/es2015/core/renderer/render/WebglRenderer' {
    import { RenderCommand } from "amy.js/dist/es2015/core/renderer/command/RenderCommand";
    import { Renderer } from "amy.js/dist/es2015/core/renderer/render/Renderer";
    export class WebglRenderer extends Renderer {
        static create(): WebglRenderer;
        init(): void;
        render(): void;
        addCommand(renderCmd: RenderCommand): void;
        hasCommand(): boolean;
    }
}

declare module 'amy.js/dist/es2015/core/renderer/state/WebglState' {
    export class WebglState {
        static create(): WebglState;
        setClearColor(r: number, g: number, b: number, a: number): void;
        init(): void;
    }
}

declare module 'amy.js/dist/es2015/core/Scene/GameObjectScene' {
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { Renderer } from "amy.js/dist/es2015/core/renderer/render/Renderer";
    export class GameObjectScene extends EntityObject {
        static create(): GameObjectScene;
        readonly currentCamera: any;
        initWhenCreate(): void;
        render(renderer: Renderer): void;
        addChild(child: EntityObject): this;
        protected createTransform(): any;
    }
}

declare module 'amy.js/dist/es2015/core/Scene/Scene' {
    import { EntityObject } from "amy.js/dist/es2015/core/Entity/EntityObject";
    import { GameObjectScene } from "amy.js/dist/es2015/core/Scene/GameObjectScene";
    export class Scene extends EntityObject {
        static create(): Scene;
        gameObjectScene: GameObjectScene;
        initWhenCreate(): void;
        createTransform(): any;
        addChild(child: EntityObject): this;
    }
}

declare module 'amy.js/dist/es2015/Math/Color' {
    export class Color {
        static create(colorVal: string): Color;
        r: number;
        g: number;
        b: number;
        a: number;
        initWhenCreate(colorVal: string): void;
        toArray(): number[];
    }
}

declare module 'amy.js/dist/es2015/Math/Matrix4' {
    export class Matrix4 {
        elements: any;
        constructor(opt_src?: any);
        setIdentity(): any;
        set(src: any): any;
        concat(other: any): any;
        multiply(other: any): any;
        multiplyVector3(pos: any): any;
        multiplyVector4(pos: any): any;
        transpose(): any;
        setInverseOf(other: any): any;
        invert(): any;
        setOrtho(left: number, right: number, bottom: number, top: number, near: number, far: number): any;
        ortho(left: number, right: number, bottom: number, top: number, near: number, far: number): any;
        setFrustum(left: number, right: number, bottom: number, top: number, near: number, far: number): any;
        frustum(left: number, right: number, bottom: number, top: number, near: number, far: number): any;
        setPerspective(fovy: number, aspect: number, near: number, far: number): any;
        perspective(fovy: number, aspect: number, near: number, far: number): any;
        setScale(x: number, y: number, z: number): any;
        scale(x: number, y: number, z: number): any;
        setTranslate(x: number, y: number, z: number): any;
        translate(x: number, y: number, z: number): any;
        setRotate(angle: number, x: number, y: number, z: number): any;
        rotate(angle: number, x: number, y: number, z: number): any;
        setLookAt(eyeX: number, eyeY: number, eyeZ: number, centerX: number, centerY: number, centerZ: number, upX: number, upY: number, upZ: number): any;
        lookAt(eyeX: number, eyeY: number, eyeZ: number, centerX: number, centerY: number, centerZ: number, upX: number, upY: number, upZ: number): any;
        dropShadow(plane: any, light: any): any;
        dropShadowDirectionally(normX: any, normY: any, normZ: any, planeX: any, planeY: any, planeZ: any, lightX: any, lightY: any, lightZ: any): any;
    }
}

declare module 'amy.js/dist/es2015/Math/Vector' {
    export class Vector {
        constructor(x?: number, y?: number, z?: number, w?: number);
        x: number;
        y: number;
        z: number;
        w: number;
    }
}

declare module 'amy.js/dist/es2015/Math/Vector3' {
    export class Vector3 {
        elements: any;
        constructor(opt_src?: any);
        normalize(): any;
    }
}

declare module 'amy.js/dist/es2015/Math/Vector4' {
    export class Vector4 {
        elements: any;
        constructor(opt_src?: any);
    }
}

declare module 'amy.js/dist/es2015/until/Loader' {
    export class Loader {
        static of(): Loader;
        readFileToStream(files: any): any;
        convertByFile(fileObject: any): any;
        convertByPath(filePath: string): any;
    }
}

declare module 'amy.js/dist/es2015/until/MaterialLoader' {
    import { Collection } from "wonder-commonlib/dist/es2015/Collection";
    export class MaterialLoader {
        static create(): MaterialLoader;
        materials: Collection<MaterialModel>;
        convert(result: any, fileContent: any): any;
    }
    export class MaterialModel {
        static create(): MaterialModel;
        name: string;
        diffuseColor: Array<number>;
        specularColor: Array<number>;
        emissionColor: Array<number>;
        opacity: number;
        shininess: number;
        diffuseMapUrl: string;
        specularMapUrl: string;
        emissionMapUrl: string;
        bumpMapUrl: string;
    }
}

declare module 'amy.js/dist/es2015/until/ObjLoader' {
    import { Collection } from "wonder-commonlib/dist/es2015/Collection";
    export class ObjLoader {
        static create(): ObjLoader;
        objects: Collection<ObjectModel>;
        mtlFilePath: string;
        materialName: string;
        name: string;
        convert(result: any, fileContent: any, fileName: any): any;
    }
    export class ObjectModel {
        static create(): ObjectModel;
        vertices: number[];
        normals: number[];
        texCoords: number[];
        verticeIndices: number[];
        normalIndices: number[];
        texCoordIndices: number[];
        materialName: string;
        name: string;
        indicesCount: number;
    }
}

declare module 'amy.js/dist/es2015/until/singleton' {
    export function singleton(isInitWhenCreate?: boolean): (target: any) => void;
}

declare module 'amy.js/dist/es2015/until/Test' {
    export type fileObject = {
        obj: string;
        material: string;
    };
    export class Test {
        loadByFile(files: any): void;
        loadByPath(fileObj?: fileObject): void;
        testCanvas(models?: any): void;
    }
}

declare module 'amy.js/dist/es2015/until/Util' {
    export class Util {
        static isArray(target: any): boolean;
        static ajax(config: any): void;
    }
}

declare module 'amy.js/dist/es2015/core/device/view/IView' {
    import { ContextConfigData } from "amy.js/dist/es2015/core/ContextConfig";
    export interface IView {
        offset: {
            x: number;
            y: number;
        };
        x: number;
        y: number;
        width: number;
        height: number;
        styleWidth: string;
        styleHeight: string;
        dom: any;
        getContext(contextConfig: ContextConfigData): WebGLRenderingContext;
        initCanvas(): void;
    }
}

declare module 'amy.js/dist/es2015/core/ContextConfig' {
    export type ContextConfigData = {
        alpha: boolean;
        depth: boolean;
        stencil: boolean;
        antialias: boolean;
        premultipliedAlpha: boolean;
        preserveDrawingBuffer: boolean;
    };
}

